# Secret - activemq-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: activemq-secret
type: Opaque
data:
  ACTIVEMQ_USER: YWRtaW4=  # base64 encoded 'admin'
  ACTIVEMQ_PASSWORD: cGFzc3dvcmQ=  # base64 encoded 'password'

---
# PersistentVolume - pv.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: activemq-pv
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /mnt/data/activemq  # Change as per your node's storage path
  persistentVolumeReclaimPolicy: Retain

---
# PersistentVolumeClaim - pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: activemq-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  volumeMode: Filesystem

---
# Headless Service - headless-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: activemq-headless
  labels:
    app: activemq
spec:
  ports:
    - port: 61616
      name: activemq
  clusterIP: None
  selector:
    app: activemq

---
# ConfigMap - activemq-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: activemq-config
data:
  activemq.xml: |
    <?xml version="1.0" encoding="UTF-8"?>
    <!-- ActiveMQ Configuration -->
    <broker xmlns="http://activemq.apache.org/schema/core" brokerName="localhost" dataDirectory="${activemq.data}">
        <persistenceAdapter>
            <kahaDB directory="${activemq.data}/kahadb"/>
        </persistenceAdapter>
    </broker>

---
# StatefulSet - activemq-statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: activemq
spec:
  serviceName: activemq-headless
  replicas: 3
  selector:
    matchLabels:
      app: activemq
  template:
    metadata:
      labels:
        app: activemq
    spec:
      containers:
        - name: activemq
          image: activemq:latest
          ports:
            - containerPort: 61616
          env:
            - name: ACTIVEMQ_USER
              valueFrom:
                secretKeyRef:
                  name: activemq-secret
                  key: ACTIVEMQ_USER
            - name: ACTIVEMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: activemq-secret
                  key: ACTIVEMQ_PASSWORD
          volumeMounts:
            - name: activemq-storage
              mountPath: /var/lib/activemq
            - name: activemq-config
              mountPath: /opt/activemq/conf/activemq.xml
              subPath: activemq.xml
  volumeClaimTemplates:
    - metadata:
        name: activemq-storage
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi

---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: activemq-backup
spec:
  schedule: "0 3 * * *"  # This will run the backup at 3 AM every day
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure  # Add restartPolicy here
          containers:
            - name: pvc-backup
              image: busybox
              command:
                - "/bin/sh"
                - "-c"
                - |
                  # Backup the PVC data using tar
                  BACKUP_DIR=/backup
                  PVC_DIR=/data

                  # Create a timestamp for the backup file
                  TIMESTAMP=$(date +%F-%H-%M-%S)

                  # Create a backup tar file from PVC data
                  tar czf ${BACKUP_DIR}/pvc-backup-${TIMESTAMP}.tar.gz -C ${PVC_DIR} .

              volumeMounts:
                - name: pvc-storage
                  mountPath: /data  # Mount the PVC data
                - name: backup-storage
                  mountPath: /backup  # Mount the backup location

          volumes:
            - name: pvc-storage
              persistentVolumeClaim:
                claimName: activemq-pvc  # PVC that contains the data to back up
            - name: backup-storage
              persistentVolumeClaim:
                claimName: backup-pvc  # Separate PVC for storing backups (you need to define this PVC)

---
# Persistent Volume Claim for backup storage
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: activemq-backup-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: manual

