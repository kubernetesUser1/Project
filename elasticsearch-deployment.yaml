apiVersion: v1
kind: Secret
metadata:
  name: elasticsearch-secret
type: Opaque
data:
  ELASTIC_USERNAME: ZWxhc3RpYw==  # Base64 for "elastic"
  ELASTIC_PASSWORD: c2VjdXJlUGFzcw==  # Base64 for "securePass"

apiVersion: v1
kind: PersistentVolume
metadata:
  name: elasticsearch-pv
spec:
  capacity:
    storage: 1Gi  # Adjust as needed
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: manual
  hostPath:
    path: "/mnt/data/elasticsearch"


apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: elasticsearch-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: manual
 
apiVersion: v1
kind: ConfigMap
metadata:
  name: elasticsearch-config
data:
  elasticsearch.yml: |
    cluster.name: my-elasticsearch-cluster
    network.host: 0.0.0.0
    discovery.type: single-node




apiVersion: v1
kind: Service
metadata:
  name: elasticsearch-headless
spec:
  clusterIP: None
  ports:
    - port: 9200
  selector:
    app: elasticsearch



apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elasticsearch
spec:
  serviceName: "elasticsearch-headless"
  replicas: 1
  selector:
    matchLabels:
      app: elasticsearch
  template:
    metadata:
      labels:
        app: elasticsearch
    spec:
      containers:
        - name: elasticsearch
          image: docker.elastic.co/elasticsearch/elasticsearch:8.5.0
          ports:
            - containerPort: 9200
          envFrom:
            - secretRef:
                name: elasticsearch-secret
          volumeMounts:
            - name: elasticsearch-storage
              mountPath: /usr/share/elasticsearch/data
            - name: elasticsearch-config
              mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
              subPath: elasticsearch.yml
      volumes:
        - name: elasticsearch-config
          configMap:
            name: elasticsearch-config
  volumeClaimTemplates:
    - metadata:
        name: elasticsearch-storage
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 2Gi



apiVersion: batch/v1
kind: CronJob
metadata:
  name: elasticsearch-backup
spec:
  schedule: "0 2 * * *"  # Runs backup every day at 2 AM
  jobTemplate:
    spec:
      template:
        spec:
          containers:
            - name: backup
              image: alpine
              command:
                - sh
                - -c
                - |
                  wget -O /mnt/backups/elasticsearch-backup.json http://elasticsearch:9200/_snapshot/my_backup
              volumeMounts:
                - name: backup-storage
                  mountPath: /mnt/backups
          restartPolicy: OnFailure
          volumes:
            - name: backup-storage
              persistentVolumeClaim:
                claimName: elasticsearch-backup-pvc


apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: elasticsearch-backup-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: manual

